#pragma once
#include <iostream>
#include <string>

using namespace std;

class stack
{

private:
    struct Node {
        string node_value;
        Node* next;

        Node(string value) :node_value(value), next(nullptr) {};
    };

    Node* head;

public:

    stack()
    {
        this->head = nullptr;
    }

    ~stack()
    {
        Node* current = this->head;
        Node* after_current = nullptr;

        while (current != nullptr)
        {
            Node* node_to_delete = current;
            after_current = current->next;

            delete node_to_delete;

            current = after_current;
        }


    }

    bool empty()
    {
        return this->head == nullptr;
    }

    void add(string value)
    {
        Node* new_node = new Node(value);

        if (this->empty())
        {
            this->head = new_node;
            return;
        }

        new_node->next = this->head;
        this->head = new_node;

    }

    string del()
    {
        if (this->empty())
        {
            return "None";
        }

        string pop_element_value = this->head->node_value;

        Node* node_to_delete = this->head;

        this->head = node_to_delete->next;

        delete node_to_delete;

        return pop_element_value;

    }





};